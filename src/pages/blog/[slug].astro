---
import { Image } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.tsx';
import Footer from '../../components/Footer.tsx';
import { STRAPI_API_URL } from '../../config';
import { Markdown } from 'astro-remote';

// This function tells Astro how to generate the static pages for each blog post.
export async function getStaticPaths() {
  // Correctly access the environment variable inside the function
  const STRAPI_API_TOKEN = import.meta.env.STRAPI_API_TOKEN;

  const response = await fetch(`${STRAPI_API_URL}/api/articles?populate=*`, {
    headers: {
      'Authorization': `Bearer ${STRAPI_API_TOKEN}`,
    },
  });
  const { data } = await response.json();

  // The API response is an array of posts. We map over it to create the pages.
  return data.map((post: any) => {
    return {
      params: { slug: post.slug },
      props: { post }, // Pass the full post data to the component
    };
  });
}

// Get the post data passed from getStaticPaths
const { post } = Astro.props;
const currentPath = Astro.url.pathname;

const pageTitle = `${post.title} | Blog 100:1`;
const pageDescription = post.description;

// Extract content from the rich text block
let content = "";
const richTextBlock = post.blocks?.find(block => block.__component === 'shared.rich-text');
if (richTextBlock) {
  content = richTextBlock.body;
}

const cover = post.cover;
const coverImageUrl = cover?.url;
const coverImageWidth = cover?.width;
const coverImageHeight = cover?.height;

const publishedAt = post.publishedAt;
const authorName = post.author?.name;
---

<Layout title={pageTitle} description={pageDescription}>
  <Navigation client:load currentPath={currentPath} />
  <main class="bg-background">
    <div class="container mx-auto px-4 py-16">
      <div class="max-w-4xl mx-auto">
        <a href="/blog" class="inline-block text-accent mb-8 hover:underline font-semibold">
          &larr; Voltar para o Blog
        </a>

        <article class="bg-card p-8 md:p-12 rounded-lg shadow-lg border border-border">
          <h1 class="text-3xl md:text-5xl font-bold font-montserrat text-card-foreground mb-4">{post.title}</h1>
          
          {(publishedAt || authorName) && (
            <div class="flex flex-wrap items-center text-card-foreground/70 mb-8 text-sm">
              {publishedAt && (
                <span>{new Date(publishedAt).toLocaleDateString('pt-BR', { year: 'numeric', month: 'long', day: 'numeric' })}</span>
              )}
              {publishedAt && authorName && <span class="mx-2">â€¢</span>}
              {authorName && <span>Por {authorName}</span>}
            </div>
          )}

          {coverImageUrl && coverImageWidth && coverImageHeight && (
            <Image 
              src={coverImageUrl} 
              alt={post.title} 
              width={coverImageWidth} 
              height={coverImageHeight}
              format="webp" 
              quality={80}
              class="w-full h-auto object-cover rounded-lg mb-8"
            />
          )}

          <div class="prose prose-lg max-w-none prose-p:text-card-foreground/90 prose-headings:text-card-foreground prose-strong:text-card-foreground prose-a:text-accent prose-li:text-card-foreground/90 prose-blockquote:text-card-foreground/70">
            {content && <Markdown content={content} />}
          </div>
        </article>
        
      </div>
    </div>
  </main>
  <Footer />
</Layout>
